unsigned short Text_testingCube_testCubeTex_diff[] = {
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0fed,0x3fc9,0x3fc9,0x3fc9,0x1fe7,0x3fc9,0x3fc9,0x0fef,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0fed,0x3fc9,0x0fef,0x0fed,0x7f93,0x3fc9,0x1fe7,0x0fed,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0fed,0x1fe7,0xffa5,0xff61,0xffff,0xfff5,0x0fef,0x0fed,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0fed,0x0fef,0xffff,0xff65,0xfffd,0xfff5,0x0fef,0x0fed,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0fed,0x0ff3,0x7f95,0xfff7,0xffaf,0x7fb7,0x1fe5,0x0fed,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0fed,0x3fc9,0x0fed,0xff63,0xffff,0x7fbd,0x1fe5,0x0fed,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0fed,0x3fc9,0x3fc9,0x0fed,0x7fb7,0x3fcd,0x1fe7,0x0fed,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0ffd,0x0fff,0x0fff,0x0fff,0x0ffd,0x0ffd,0x0fff,0x0ffd,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0x06bf,0x06bf,0x06bf,0x06bf,0x06bf,0x06bf,0x07bd,0x0dbf,0x0bbf,0x0bbf,0x0bbf,0x0bbf,0x0bbf,0x0bbf,0x0dbf,0x01b7,0x015b,0x015b,0x0139,0x0159,0x015b,0x015b,0x0221,0x007d,0x007d,0x007d,0x007d,0x007d,0x007d,0x007d,0x0079,
        0x26ff,0x1eff,0x473f,0x677f,0x16ff,0x26ff,0x0fff,0x0e37,0x0c37,0x73fb,0x6f3b,0x73bb,0x6f3b,0x0c37,0x0e3b,0x021d,0x0361,0x015b,0x752d,0x5ca9,0x015b,0x0361,0x06e5,0x027d,0x01fd,0x007d,0x27f3,0x2bf5,0x007d,0x01fd,0x01fb,
        0x26ff,0x0eff,0xa77f,0xffff,0x06bf,0x26ff,0x0fff,0x0e37,0x0bb7,0xffbf,0xffff,0xe4bd,0xf5bd,0x0c37,0x0e3b,0x021d,0x013b,0xffff,0xbeb5,0xe7bd,0xb6b7,0x015b,0x06e5,0x027d,0x007d,0xb7ed,0xe7f9,0xdff7,0xcff1,0x007d,0x01fb,
        0x26ff,0x06bf,0x8f7f,0xf7ff,0x06bf,0x26ff,0x0fff,0x0e37,0x0cb9,0x0bb5,0xff3f,0xf6bf,0x0b35,0x0cb9,0x0e3b,0x021d,0x01bf,0x039f,0x0117,0x85af,0xffff,0x0139,0x06e5,0x027d,0x007d,0xffff,0x2bf3,0x27f1,0xffff,0x007d,0x01fb,
        0x06bf,0xffff,0xbfbf,0xefff,0x06bf,0x26ff,0x0fff,0x0e37,0x0cb7,0x35f9,0x0b35,0xedbd,0xff3f,0x0bb7,0x0e3b,0x021d,0x0139,0xffff,0xefbd,0xc6f9,0x1361,0x01bf,0x06e5,0x027d,0x007d,0xffff,0xcff3,0xf7fb,0x0bfb,0x017d,0x01fb,
        0x1eff,0x1eff,0xffff,0xffff,0x06bf,0x26ff,0x0fff,0x0e37,0x0bb7,0xffff,0xffff,0xffbf,0xf63d,0x0bb7,0x0e3b,0x021d,0x015b,0xb6b7,0xefbd,0xae75,0x85f1,0x015b,0x06e5,0x027d,0x007d,0xdff5,0xbfef,0x97e3,0xa7e5,0x007d,0x01fb,
        0x26ff,0x1eff,0x16ff,0x4f3f,0x1eff,0x26ff,0x0fff,0x0e37,0x0cb9,0x0c37,0x35f9,0x33b9,0x0c37,0x0cb7,0x0e3b,0x021d,0x019f,0x0fa3,0x5467,0x54a9,0x3425,0x019f,0x06e5,0x027d,0x01fd,0x007d,0x43ff,0x8fe1,0x007d,0x01fd,0x01fb,
        0x06bf,0x06bf,0x06bf,0x06bf,0x06bf,0x06bf,0x07bd,0x0dbb,0x0bfb,0x0bfb,0x0bbb,0x0bbb,0x0bfb,0x0bfb,0x0dff,0x01b9,0x015b,0x015b,0x015b,0x015b,0x015b,0x017b,0x0221,0x00fd,0x007d,0x007d,0x007d,0x007d,0x007d,0x007d,0x0079,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x07d3,0x07f9,0x07f9,0x07d5,0x07d7,0x07f9,0x07f9,0x07d3,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x07d7,0x07dd,0x07d7,0xfc2d,0x7f27,0x07d7,0x07dd,0x07d7,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x07d7,0x07d7,0xffff,0xfd6f,0xff3d,0xfdb5,0x07d7,0x07d7,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x07d7,0x07dd,0x07d7,0x07f9,0xfe37,0xfe79,0x07d5,0x07d7,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x07d7,0x07dd,0x07d3,0x7e25,0xffff,0x0ffd,0x07dd,0x07d7,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x07d7,0x07d5,0xffff,0xfd6f,0xffff,0xfc2f,0x07d9,0x07d7,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x07d7,0x07dd,0x07d7,0x7f6b,0x7e63,0x07d7,0x07dd,0x07d7,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0793,0x07d7,0x07d7,0x07d5,0x07d7,0x07d7,0x07d7,0x0793,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
        0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
};

Vtx_tn Vtx_testingCube_mesh01_0[8] = {
        {      30,     -30,      30,       0,     480,     240,     130,     130,     130,     0},
        {     -30,     -30,      30,       0,     240,     240,     130,     130,     130,     0},
        {     -30,     -30,     -30,       0,     240,     719,     130,     130,     130,     0},
        {      30,      30,     -30,       0,     240,     480,     130,     130,     130,     0},
        {     -30,      30,     -30,       0,     480,     480,     130,     130,     130,     0},
        {     -30,      30,      30,       0,     959,     480,     130,     130,     130,     0},
        {      29,      30,      30,       0,     719,     480,     130,     130,     130,     0},
        {      30,     -30,     -30,       0,     480,       0,     130,     130,     130,     0},
};

Gfx Vtx_testingCube_mesh01_dl[] = {
        gsSPVertex(&Vtx_testingCube_mesh01_0[0], 8, 0),
        gsSP1Triangle(1,2,3,0),
        gsSP1Triangle(4,5,6,0),
        gsSP1Triangle(4,7,1,0),
        gsSP1Triangle(7,6,2,0),
        gsSP1Triangle(6,5,3,0),
        gsSP1Triangle(0,3,5,0),
        gsSP1Triangle(0,1,3,0),
        gsSP1Triangle(7,4,6,0),
        gsSP1Triangle(0,4,1,0),
        gsSP1Triangle(1,7,2,0),
        gsSP1Triangle(2,6,3,0),
        gsSP1Triangle(4,0,5,0)
};

Gfx Wtx_testingCube[] = {
        gsDPLoadTextureBlock(Text_testingCube_testCubeTex_diff, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32,32, 0, G_TX_WRAP|G_TX_NOMIRROR, G_TX_WRAP|G_TX_NOMIRROR,5,5, G_TX_NOLOD, G_TX_NOLOD),
        gsSPDisplayList(Vtx_testingCube_mesh01_dl),
        gsSPEndDisplayList()
};