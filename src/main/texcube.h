// Generated by Arabiki64 V1.2
// By Buu342


// Custom combine mode to allow mixing primitive and vertex colors
#ifndef G_CC_PRIMLITE
    #define G_CC_PRIMLITE SHADE,0,PRIMITIVE,0,0,0,0,PRIMITIVE
#endif


// Generated by Nintendo 64 Texture Converter
// By buu342
// Size = 32x32
// Type = 16-Bit RGBA (G_IM_FMT_RGBA | G_IM_SIZ_16b)

static Gfx N64_Logo_C_dummy_aligner1[] = { gsSPEndDisplayList() };
u16 logo[] = {
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xF581, 0xF581, 0xF581, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xF585, 0xF581, 0xF581, 0xF581, 0xF581, 0xF581, 0xF581, 0xCD99, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x34C1, 0x4CC7, 0x74CB, 0xDD4B, 0xF581, 0xF585, 0xCD99, 0x5A23, 0x29A7, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x34C1, 0x34C1, 0x34C1, 0x3CC3, 0x4CC7, 0x4B93, 0x5A23, 0x5A23, 0x10A5, 0x0027, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xF581, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x29A7, 0x0029, 0x0027, 0x0027, 0x0027, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xF581, 0xF581, 0xF581, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xF581, 0xF581, 0xF581, 0xF581, 0xF581, 0xF581, 0xF581, 0xFFFE, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x10A5, 0x0027, 0x0027, 0x0027, 0x0027, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xF581, 0xF581, 0xF581, 0xF581, 0xF581, 0xF581, 0xF581, 0xFFFE, 
    0x4CC7, 0xAD8D, 0xDD4B, 0xF581, 0xF581, 0xF581, 0xF581, 0xDD4B, 0xD14D, 0x4CC7, 0x34C1, 0x34C1, 0x34C1, 0x2BC9, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0xFFFE, 0xFFFE, 0x34C1, 0x74CB, 0xAD8D, 0xF581, 0xF581, 0xF581, 0xF585, 0xCD99, 0x8B9B, 0x5A23, 
    0x34C1, 0x4CC7, 0x74CB, 0x74CB, 0xAD8D, 0xE18F, 0xE18F, 0xE18F, 0xD847, 0xA34D, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x0025, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0xFFFE, 0x3CC3, 0x34C1, 0x4CC7, 0x4CC7, 0x74CB, 0xAD8D, 0x8B9B, 0x8B9B, 0x5A23, 0x5A23, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x3CC3, 0x74CB, 0xD14D, 0xD847, 0xD847, 0xD847, 0xD14D, 0x4CC7, 0x34C1, 0x4B93, 0x29A7, 0x8B9B, 0xB5A1, 0xB5A1, 0x5A23, 0x0025, 0x10A5, 0x2BC9, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x74CB, 0x5A23, 0x29A7, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0xA34D, 0xD847, 0xD847, 0xD847, 0xD847, 0xA34D, 0x4CC7, 0xAD8D, 0xCD99, 0xDD4B, 0xF5CD, 0xF5CD, 0xCD99, 0xCD99, 0x8B9B, 0x3CC3, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x4CC7, 0xD14D, 0xD847, 0xD847, 0xD847, 0xD14D, 0xAD8D, 0xF585, 0xF585, 0xF581, 0xF581, 0xF581, 0xF581, 0xF585, 0xCD99, 0x8B9B, 0x2BC9, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0xA34D, 0xD847, 0xD847, 0xD847, 0xD847, 0x74CB, 0xAD8D, 0xAD8D, 0xDD4B, 0xF581, 0xDD4B, 0xCD99, 0x8B9B, 0x8B9B, 0x5A23, 0x435B, 0x3CC3, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x4CC7, 0xA34D, 0xD847, 0xD847, 0xD847, 0x34C1, 0x34C1, 0x4CC7, 0x74CB, 0xAD8D, 0x8B9B, 0x8B9B, 0x29A7, 0x0027, 0x0027, 0x10A5, 0x4B93, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x74CB, 0xD847, 0xD847, 0xD847, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0029, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x29A7, 0x4B93, 0x34C1, 0x34C1, 0x34C1, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x4CC7, 0xA34D, 0xD847, 0xD847, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x435B, 0x2BC9, 0x34C1, 0x34C1, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x74CB, 0xD847, 0xD847, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x10A5, 0x4B93, 0x34C1, 0x34C1, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x4CC7, 0xD14D, 0xD847, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x29A7, 0x4B93, 0x34C1, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x4B93, 0x3481, 0x34C1, 0x34C1, 0x34C1, 0x74CB, 0xD847, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0029, 0x0027, 0x0027, 0x0027, 0x0027, 0x435B, 0x3481, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x4B93, 0x34C1, 0x34C1, 0x34C1, 0x3CC3, 0xD14D, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x5A23, 0x5A23, 0x0027, 0x0027, 0x0027, 0x10A5, 0x435B, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x435B, 0x3481, 0x34C1, 0x34C1, 0x34C1, 0xA34D, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x9959, 0x9959, 0x29A7, 0x0027, 0x0027, 0x0027, 0x29A7, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x10A5, 0x4B93, 0x34C1, 0x34C1, 0x34C1, 0x4CC7, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x9959, 0xD847, 0x9959, 0x10A5, 0x0027, 0x0027, 0x0027, 0x0025, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x0027, 0x435B, 0x2BC9, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x9959, 0xD847, 0xD14D, 0x5A23, 0x0025, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x0027, 0x0027, 0x4B93, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x9959, 0xD847, 0xD847, 0x9959, 0x5A23, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x0027, 0x0027, 0x435B, 0x4CC7, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x5A23, 0xD847, 0xD847, 0xD847, 0x9959, 0x5A23, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0x0025, 
    0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x0027, 0x0027, 0x0027, 0x4B93, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0xFFFE, 0xD847, 0xD847, 0xD847, 0x9959, 0x29A7, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 
    0xFFFE, 0x34C1, 0x34C1, 0x34C1, 0x435B, 0x0027, 0x0027, 0x0027, 0x435B, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0xFFFE, 0xFFFE, 0xD847, 0xD847, 0xD847, 0x5A23, 0x0025, 0x0027, 0x0027, 0x0025, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0x34C1, 0x435B, 0x0029, 0xFFFE, 0xFFFE, 0xFFFE, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xD847, 0xD14D, 0x10A5, 0x0025, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0027, 0x0027, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x34C1, 0x34C1, 0x34C1, 0x34C1, 0x0027, 0x0027, 0x0027, 0x0029, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x34C1, 0x0029, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
};

// Generated by Nintendo 64 Texture Converter
// By buu342
// Size = 32x32
// Type = 16-Bit RGBA (G_IM_FMT_RGBA | G_IM_SIZ_16b)

static Gfx N64brew_C_dummy_aligner1[] = { gsSPEndDisplayList() };
u16 brew[] = {
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xEF7A, 0xA4E4, 0xA451, 0xA49C, 0xCE72, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xF7BC, 0xEF7A, 0xFFFE, 0x4BD7, 0x94C9, 0xE585, 0xC497, 0x525B, 0xF7BC, 0xFFFE, 0xEF7A, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xF7BC, 0x9CA0, 0xAC49, 0xB445, 0x8BD3, 0x0BCB, 0x0C8D, 0x1B21, 0x012B, 0x195F, 0x945E, 0xAC4B, 0xB445, 0x9C56, 0xD6B4, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xDEF6, 0x53C9, 0xB549, 0xF4C5, 0xF305, 0x6C0B, 0x0C15, 0x0969, 0x012B, 0x099D, 0x4C4B, 0xAD49, 0xC4D7, 0x7B21, 0x8424, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xDEF6, 0x0B8B, 0x0C8D, 0xA38B, 0xF907, 0xCAC9, 0xA497, 0xE551, 0xC4D9, 0x5417, 0x0C8D, 0x0C8D, 0x0265, 0x00E9, 0x8424, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xDEF6, 0x0B8B, 0x0C8D, 0x348D, 0xE207, 0xDA49, 0x4C8D, 0x9CD3, 0x72E5, 0x11A9, 0x0C53, 0x0C8D, 0x0265, 0x00E9, 0x8424, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xDEF6, 0x0B8B, 0x0C8D, 0x0C8D, 0x9B8B, 0xDA49, 0x0C8D, 0x0BDB, 0x012B, 0x012B, 0x0265, 0x0C8D, 0x0265, 0x00E9, 0x8424, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xDEF6, 0x0B8B, 0x0C8D, 0x0C51, 0x248D, 0xBAC9, 0x0C8D, 0x0BDB, 0x012B, 0x092B, 0x012B, 0x0B5F, 0x0265, 0x00E9, 0x8424, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xDEF6, 0x130B, 0x1B4B, 0x12DB, 0x0C8D, 0x540D, 0x0C8D, 0x0BDB, 0x012B, 0x8123, 0x5127, 0x0129, 0x01A9, 0x00E9, 0x8424, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xE738, 0x9CE6, 0xAD6B, 0xE739, 0xC631, 0x3BD1, 0x0C8D, 0x0C8D, 0x0BDB, 0x012B, 0x9121, 0xA0D5, 0x08DF, 0x00E7, 0x00E9, 0x7C24, 0xEF7A, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xF7BC, 0x94A5, 0xDEF7, 0xF7BD, 0xFFFF, 0xFFFF, 0xBDEF, 0x138B, 0x234D, 0x1317, 0x0129, 0x73A3, 0xD6B5, 0xE739, 0xAD6B, 0x4A5D, 0xAD6B, 0xA529, 0x9CE6, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xEF7A, 0xAD6B, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xD6B5, 0xCE73, 0xF7BD, 0xDEF7, 0x6B5D, 0xE739, 0xFFFF, 0xFFFF, 0xFFFF, 0xF7BD, 0xFFFF, 0xEF7B, 0x8420, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xB5AC, 0xA529, 0xCE73, 0xEF7B, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xE739, 0xDEF7, 0xFFFF, 0xFFFF, 0xFFFF, 0xF7BD, 0xCE73, 0x94A5, 0xC630, 0xDEF6, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x8C62, 0xDEF7, 0xC5A7, 0xBCDD, 0xBDA9, 0xC5AB, 0xCDED, 0xCE71, 0xCE71, 0xEF7B, 0xFFFF, 0xFFFF, 0xAD29, 0xCE73, 0xC631, 0xC631, 0xCE73, 0xC631, 0x9CE7, 0xF7BC, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x94A4, 0xFFFF, 0xFEED, 0xFDD5, 0xFEE5, 0xFD93, 0xFD4D, 0xF54D, 0xF54D, 0xBC97, 0xBD67, 0xB49F, 0xE59F, 0xFFFF, 0xDEF7, 0xB5AD, 0xB5AD, 0xEF7B, 0xC631, 0xD6B4, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x9CE7, 0xFFFF, 0xFEA9, 0xFDD7, 0xFEE3, 0xFD91, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFDD9, 0xFFFF, 0xB5AD, 0xDEF6, 0xDEF6, 0xB5AD, 0xD6B5, 0xB5AC, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x9CE7, 0xFFFF, 0xFE65, 0xFE19, 0xFEE3, 0xFD8F, 0xFD8D, 0xFD8D, 0xFD8D, 0xF54D, 0xE50B, 0xFD4D, 0xFD95, 0xFFFD, 0xBDEF, 0xD6B4, 0xF7BC, 0xAD6B, 0xE739, 0x9CE6, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xF7BC, 0xA529, 0xFFFF, 0xFE21, 0xFE1B, 0xFEA3, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD4D, 0x7B1B, 0x21E7, 0xABCD, 0xFD8F, 0xFFBB, 0xCE73, 0xC630, 0xFFFE, 0x9CE7, 0xF7BD, 0x94A4, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xEF7A, 0xB5AD, 0xFFFF, 0xFDDB, 0xFE5D, 0xFEA1, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD4D, 0x831B, 0x19A7, 0xABCD, 0xFD8D, 0xFFB9, 0xDEF7, 0xAD6A, 0xFFFE, 0x9CE6, 0xFFFF, 0x94A4, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xE738, 0xB5AD, 0xFFFF, 0xFD93, 0xFE5D, 0xFEA1, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xF54D, 0xED0D, 0xFD4D, 0xFD8D, 0xFF77, 0xE739, 0x9CE6, 0xFFFE, 0x94A4, 0xF7BD, 0x9CE7, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xD6B4, 0xC631, 0xFFFF, 0xFD8D, 0xFE5F, 0xFE5F, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFF35, 0xEF7B, 0x94A4, 0xFFFE, 0x94A4, 0xEF7B, 0xA529, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xBDEE, 0xCE73, 0xFFBB, 0xFD8D, 0xFEA1, 0xFE5D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFEF1, 0xF7BD, 0x739D, 0x9CE6, 0xAD6B, 0xF7BD, 0xA529, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xAD6A, 0xDEF7, 0xFFB9, 0xFD8D, 0xFEA1, 0xFE1B, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFEED, 0xFFFF, 0xF7BD, 0xFFFF, 0xF7BD, 0xCE73, 0x9CE6, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x94A4, 0xE739, 0xFF77, 0xFD8D, 0xFD93, 0xFD91, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFEA9, 0xFFFF, 0x9CE7, 0xA528, 0xA528, 0xC630, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x8C62, 0xEF7B, 0xFF79, 0xFDDB, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFD8D, 0xFDDD, 0xFF33, 0xFFFF, 0x9CE7, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0x8C62, 0xF7BD, 0xFFFF, 0xFFFF, 0xFFBB, 0xFF77, 0xFF31, 0xFEEF, 0xFEED, 0xFEEF, 0xFEF1, 0xFF75, 0xFFBB, 0xFFFF, 0xFFFF, 0xF7BD, 0x8C63, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xC630, 0x9CE6, 0xAD6B, 0xC631, 0xDEF7, 0xEF7B, 0xF7BD, 0xF7BD, 0xF7BD, 0xF7BD, 0xF7BD, 0xEF7B, 0xDEF7, 0xC631, 0xAD6B, 0x9CE6, 0xC630, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xF7BC, 0xDEF6, 0xBDEE, 0xA528, 0x9CE6, 0xA528, 0xA528, 0xA528, 0x9CE6, 0x9CE6, 0xB5AC, 0xDEF6, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
    0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFE, 
};


/*********************************
              Models
*********************************/

static Vtx vtx_MyModel[] = {
    { 10, -10, -10, 0, 1024, 1024, 255, 255, 255, 255},
    { 10, -10,  10, 0, 1024,    0, 255, 255, 255, 255},
    {-10, -10,  10, 0,    0,    0, 255, 255, 255, 255},
    {-10, -10, -10, 0,    0, 1024, 255, 255, 255, 255},
    {-10, -10, -10, 0, 1024, 1024, 255, 255, 255, 255},
    {-10, -10,  10, 0, 1024,    0, 255, 255, 255, 255},
    {-10,  10,  10, 0,    0,    0, 255, 255, 255, 255},
    {-10,  10, -10, 0,    0, 1024, 255, 255, 255, 255},
    { 10,  10, -10, 0, 1024, 1024, 255, 255, 255, 255},
    { 10,  10,  10, 0, 1024,    0, 255, 255, 255, 255},
    { 10, -10,  10, 0,    0,    0, 255, 255, 255, 255},
    { 10, -10, -10, 0,    0, 1024, 255, 255, 255, 255},
    {-10,  10, -10, 0, 1024, 1024, 255, 255, 255, 255},
    {-10,  10,  10, 0, 1024,    0, 255, 255, 255, 255},
    { 10,  10,  10, 0,    0,    0, 255, 255, 255, 255},
    { 10,  10, -10, 0,    0, 1024, 255, 255, 255, 255},
    { 10,  10,  10, 0,  -96, 1088, 255, 255, 255, 255},
    {-10,  10,  10, 0, 1120, 1088, 255, 255, 255, 255},
    {-10, -10,  10, 0, 1120,  -96, 255, 255, 255, 255},
    { 10, -10,  10, 0,  -96,  -96, 255, 255, 255, 255},
    {-10,  10, -10, 0,  -96, 1088, 255, 255, 255, 255},
    { 10,  10, -10, 0, 1088, 1088, 255, 255, 255, 255},
    { 10, -10, -10, 0, 1088,  -64, 255, 255, 255, 255},
    {-10, -10, -10, 0,  -96,  -64, 255, 255, 255, 255},
};

static Gfx gfx_cube[] = {
    gsSPVertex(vtx_MyModel+0, 24, 0),
    gsDPSetCycleType(G_CYC_1CYCLE),
    gsDPSetRenderMode(G_RM_AA_ZB_OPA_SURF, G_RM_AA_ZB_OPA_SURF2),
    gsDPSetCombineMode(G_CC_MODULATEIDECALA, G_CC_MODULATEIDECALA),
    gsDPSetTextureFilter(G_TF_BILERP),
    gsSPClearGeometryMode(0xFFFFFFFF),
    gsSPSetGeometryMode(G_SHADE | G_ZBUFFER | G_CULL_BACK | G_SHADING_SMOOTH | G_LIGHTING),
    gsDPLoadTextureBlock(brew, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, G_TX_MIRROR, G_TX_MIRROR, 5, 5, G_TX_NOLOD, G_TX_NOLOD),
    gsDPPipeSync(),
    gsSP2Triangles(0, 1, 2, 0, 0, 2, 3, 0),
    gsSP2Triangles(4, 5, 6, 0, 4, 6, 7, 0),
    gsSP2Triangles(8, 9, 10, 0, 8, 10, 11, 0),
    gsSP2Triangles(12, 13, 14, 0, 12, 14, 15, 0),
    gsDPLoadTextureBlock(logo, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, G_TX_MIRROR, G_TX_MIRROR, 5, 5, G_TX_NOLOD, G_TX_NOLOD),
    gsDPPipeSync(),
    gsSP2Triangles(16, 17, 18, 0, 16, 18, 19, 0),
    gsSP2Triangles(20, 21, 22, 0, 20, 22, 23, 0),
    gsSPEndDisplayList(),
};